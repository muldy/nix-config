# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ 
      ./configuration.nix
     (modulesPath + "/profiles/qemu-guest.nix")
    ];

  # Bootloader.
  boot.loader.systemd-boot.enable = true;
  boot.initrd.availableKernelModules = [ "ata_piix" "xhci_pci" "ahci" "sd_mod" "sr_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/71d149d0-7601-406d-86e5-4bd5d44a78dd";
      fsType = "ext4";
    };
  boot.kernel.sysctl = { 
  	"vm.swappiness" = 0;
	"net.ipv4.ip_unprivileged_port_start" = 69;
	};
  boot.supportedFilesystems = [ "nfs" ];

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/2CE6-A677";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/0c902d70-3b38-48c7-903a-6deee810353e"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.ens3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
